// URL https://projecteuler.net/problem=2

// Problem 2
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

// Pseudocode

// iterate along the fibonacci sequence
// if current element is even & <= n
// push element into sum array
// add each element in sum array
// return value

// Solution

const fibonacci = (n) => {
	let currentNumber = 1;
	let nextNumber = 2;
	let answer = [];
	while (currentNumber <= n) {
		if (currentNumber % 2 === 0) {
			answer.push(currentNumber);
		}
		sum = currentNumber + nextNumber;
		currentNumber = nextNumber;
		nextNumber = sum;
	}
	return answer.reduce((a, b) => b + a);
};

console.log(fibonacci(4000000));
